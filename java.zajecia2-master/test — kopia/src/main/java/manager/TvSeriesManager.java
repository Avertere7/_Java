package manager;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import example.test.TvSeries;

public class TvSeriesManager {
	
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableTvSeries = "CREATE TABLE TvSeries(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), idSeason bigint)";

	private PreparedStatement addTvSeriesStmt;
	private PreparedStatement deleteAllTvSeriesStmt;
	private PreparedStatement getAllTvSeriesStmt;
	
	private Statement statement;
	
	public TvSeriesManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("TvSeries".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableTvSeries);

			addTvSeriesStmt = connection.prepareStatement("INSERT INTO TvSeries (name,idSeason) VALUES (?, ?)");
			deleteAllTvSeriesStmt = connection.prepareStatement("DELETE  FROM TvSeries");
			getAllTvSeriesStmt = connection.prepareStatement("SELECT id, name, idSeason FROM TvSeries");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	 public Connection getConnection() {
		return connection;
	}

	public void clearTvSeries() {
		try {
			deleteAllTvSeriesStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addTvSeries(TvSeries tvs) {
		int count = 0;
		try {
			addTvSeriesStmt.setString(1, tvs.getName());
			addTvSeriesStmt.setInt(2, tvs.getIdSeason());

			count = addTvSeriesStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public List<TvSeries> getAllTvSeries() {
		List<TvSeries> tvseries = new ArrayList<TvSeries>();

		try {
			ResultSet rs = getAllTvSeriesStmt.executeQuery();

			while (rs.next()) {
				TvSeries tvs = new TvSeries();
				tvs.setId(rs.getInt("id"));
				tvs.setName(rs.getString("name"));
				tvs.setIdSeason(rs.getInt("idSeason"));
				tvseries.add(tvs);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return tvseries;
	}


}
