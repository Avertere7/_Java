package manager;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import example.test.Director;

public class DirectorManager {
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableEpisode = "CREATE TABLE Directors(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), dateOfBirth char(10), biography varchar(20)";

	private PreparedStatement addDirectorStmt;
	private PreparedStatement deleteAllDirectorsStmt;
	private PreparedStatement getAllDirectorsStmt;
	
	private Statement statement;
	
	public DirectorManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Directors".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableEpisode);

			addDirectorStmt = connection
					.prepareStatement("INSERT INTO Directors (name, dateOfBirth, biography) VALUES (?, ?, ?)");
			deleteAllDirectorsStmt = connection
					.prepareStatement("DELETE  FROM Directors");
			getAllDirectorsStmt = connection
					.prepareStatement("SELECT id, name, dateOfBirth, biography FROM Directors");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public Connection getConnection() {
		return connection;
	}

	public void clearDirectors() {
		try {
			deleteAllDirectorsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addDirector(Director director) {
		int count = 0;
		try {
			addDirectorStmt.setString(1, director.getName());
			addDirectorStmt.setString(2, director.getDateOfBirth());
			addDirectorStmt.setString(3, director.getBiography());

			count = addDirectorStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public List<Director> getAllDirectors() {
		List<Director> directors = new ArrayList<Director>();

		try {
			ResultSet rs = getAllDirectorsStmt.executeQuery();

			while (rs.next()) {
				Director d = new Director();
				d.setId(rs.getInt("id"));
				d.setName(rs.getString("name"));
				d.setDateOfBirth(rs.getString("dateOfBirth"));
				d.setBiography(rs.getString("biography"));
				directors.add(d);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return directors;
	}
}
