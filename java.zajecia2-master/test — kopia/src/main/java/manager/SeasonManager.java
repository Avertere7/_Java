package manager;



import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import example.test.Season;

public class SeasonManager {
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableSeason = "CREATE TABLE Season(id bigint GENERATED BY DEFAULT AS IDENTITY,yearOfRelease char(10), seasonNumber bigint )";

	private PreparedStatement addSeasonStmt;
	private PreparedStatement deleteAllSeasonsStmt;
	private PreparedStatement getAllSeasonsStmt;
	
	private Statement statement;
	
	public SeasonManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Season".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableSeason);

			addSeasonStmt = connection.prepareStatement("INSERT INTO Season (yearOfRelease, seasonNumber) VALUES (?, ?)");
			deleteAllSeasonsStmt = connection.prepareStatement("DELETE  FROM Season");
			getAllSeasonsStmt = connection.prepareStatement("SELECT id, yearOfRealase, seasonNumber FROM Season");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public Connection getConnection() {
		return connection;
	}

	public void clearSeasons() {
		try {
			deleteAllSeasonsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addSeason(Season s) {
		int count = 0;
		try {
			addSeasonStmt.setString(1, s.getYearOfRelease());
			addSeasonStmt.setInt(2, s.getSeasonNumber());

			count = addSeasonStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public List<Season> getAllSeasons() {
		List<Season> seasons = new ArrayList<Season>();

		try {
			ResultSet rs = getAllSeasonsStmt.executeQuery();

			while (rs.next()) {
				Season s = new Season();
				s.setId(rs.getInt("id"));
				s.setYearOfRelease(rs.getString("yearOfRealase"));
				s.setSeasonNumber(rs.getInt("seasonNumber"));
				seasons.add(s);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return seasons;
	}
}
