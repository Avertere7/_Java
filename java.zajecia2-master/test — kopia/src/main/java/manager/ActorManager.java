package manager;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import example.test.Actor;

public class ActorManager {
	
	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableActor = "CREATE TABLE Actor(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), dateOfBirth varchar(12), biography varchar(20)";

	private PreparedStatement addActorStmt;
	private PreparedStatement deleteAllActorsStmt;
	private PreparedStatement getAllActorsStmt;
	
	private Statement statement;
	
	public ActorManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Actor".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableActor);

			addActorStmt = connection.prepareStatement("INSERT INTO Actor (name, dateOfBirth, biography) VALUES (?, ?, ?)");
			deleteAllActorsStmt = connection.prepareStatement("DELETE  FROM Actor");
			getAllActorsStmt = connection.prepareStatement("SELECT id, name, dateOfBirth, biography FROM Actor");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	 public Connection getConnection() {
		return connection;
	}

	public void clearActors() {
		try {
			deleteAllActorsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addActor(Actor actor) {
		int count = 0;
		try {
			addActorStmt.setString(1, actor.getName());
			addActorStmt.setString(2, actor.getDateOfBirth());
			addActorStmt.setString(3, actor.getBiography());

			count = addActorStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public List<Actor> getAllActors() {
		List<Actor> actors = new ArrayList<Actor>();

		try {
			ResultSet rs = getAllActorsStmt.executeQuery();

			while (rs.next()) {
				Actor a = new Actor();
				a.setId(rs.getInt("id"));
				a.setName(rs.getString("name"));
				a.setDateOfBirth(rs.getString("dateOfBirth"));
				a.setBiography(rs.getString("biography"));
				actors.add(a);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return actors;
	}
}
